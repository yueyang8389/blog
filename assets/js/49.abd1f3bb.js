(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{337:function(t,a,s){"use strict";s.r(a);var e=s(3),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("2019年9月面试记录\n")]),t._v(" "),s("h2",{attrs:{id:"_2019-9-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2019-9-9","aria-hidden":"true"}},[t._v("#")]),t._v(" 2019-9-9")]),t._v(" "),s("h4",{attrs:{id:"常见的6种数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的6种数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见的6种数据类型")]),t._v(" "),s("ul",[s("li",[t._v("string 字符串")]),t._v(" "),s("li",[t._v("number 数值")]),t._v(" "),s("li",[t._v("object 对象")]),t._v(" "),s("li",[t._v("array 数组")]),t._v(" "),s("li",[t._v("null 空")]),t._v(" "),s("li",[t._v("undefined 未定义")])]),t._v(" "),s("h4",{attrs:{id:"ajax和promise的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ajax和promise的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" ajax和promise的区别")]),t._v(" "),s("ul",[s("li",[t._v("ajax的数据是在回调函数里面返回的")]),t._v(" "),s("li",[t._v("promise是在then函数里面返回")]),t._v(" "),s("li",[t._v("promise是为了解决ajax回调地狱的问题")]),t._v(" "),s("li",[t._v("promise是链式写法")]),t._v(" "),s("li",[t._v("es7新增async await函数也可以解决ajax回调地狱和promise重复嵌套的问题")])]),t._v(" "),s("h4",{attrs:{id:"怎么解决0-1-0-2-0-33333的问题，只想要小数部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么解决0-1-0-2-0-33333的问题，只想要小数部分","aria-hidden":"true"}},[t._v("#")]),t._v(" 怎么解决0.1+0.2=0.33333的问题，只想要小数部分")]),t._v(" "),s("ul",[s("li",[t._v("利用(0.1+0.2).toFixed(1)")]),t._v(" "),s("li",[t._v("可以先分别乘以10，然后再除以10")])]),t._v(" "),s("h4",{attrs:{id:"promise有几种状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise有几种状态","aria-hidden":"true"}},[t._v("#")]),t._v(" promise有几种状态")]),t._v(" "),s("ul",[s("li",[t._v("pending：进行中")]),t._v(" "),s("li",[t._v("fulfilled：已成功")]),t._v(" "),s("li",[t._v("rejected：已失败")])]),t._v(" "),s("h4",{attrs:{id:"为什么不建议在原型上拓展方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么不建议在原型上拓展方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么不建议在原型上拓展方法")]),t._v(" "),s("ul",[s("li",[t._v("容易造成全局污染，和其他库冲突")]),t._v(" "),s("li",[t._v("出了Bug不太好定位问题")]),t._v(" "),s("li",[t._v("有可能出现代码向上不兼容的情况")])]),t._v(" "),s("h4",{attrs:{id:"array的some、every、filter、find有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array的some、every、filter、find有什么区别","aria-hidden":"true"}},[t._v("#")]),t._v(" array的some、every、filter、find有什么区别")]),t._v(" "),s("ul",[s("li",[t._v("some只要数组中有一个满足条件，就返回true")]),t._v(" "),s("li",[t._v("every只有数组中所有的项满足条件，才返回true")]),t._v(" "),s("li",[t._v("filter返回一个满足条件的新数组")]),t._v(" "),s("li",[t._v("find返回数组中满足条件的第一个元素的值")])]),t._v(" "),s("h4",{attrs:{id:"es6都用过哪些新增的特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6都用过哪些新增的特性","aria-hidden":"true"}},[t._v("#")]),t._v(" es6都用过哪些新增的特性")]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"http://es6.ruanyifeng.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一封 es6"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("let和const声明变量")]),t._v(" "),s("li",[t._v("对象解构、数组解构、参数解构")]),t._v(" "),s("li",[t._v("拓展运算符...")]),t._v(" "),s("li",[t._v("async await 函数")]),t._v(" "),s("li",[t._v("Promise 对象")]),t._v(" "),s("li",[t._v("Class类")]),t._v(" "),s("li",[t._v("Set和Map数据结构")]),t._v(" "),s("li",[t._v("for of 循环迭代 String、Array、Map、Set、")]),t._v(" "),s("li",[t._v("字符串的拓展\n"),s("ul",[s("li",[t._v("字符串模板 ``")]),t._v(" "),s("li",[t._v("string.includes()")])])]),t._v(" "),s("li",[t._v("数值的拓展\n"),s("ul",[s("li",[t._v("Number.isNaN()")]),t._v(" "),s("li",[t._v("Number.isFinite()")]),t._v(" "),s("li",[t._v("Number.isInteger()")]),t._v(" "),s("li",[t._v("Math.trunc() 去除一个数的小数部分，返回整数部分")]),t._v(" "),s("li",[t._v("指数运算符 2 ** 2 = 4")])])]),t._v(" "),s("li",[t._v("函数的拓展\n"),s("ul",[s("li",[t._v("函数参数的默认值")]),t._v(" "),s("li",[t._v("箭头函数")]),t._v(" "),s("li",[t._v("rest参数...rest")]),t._v(" "),s("li",[t._v("函数的name属性，返回该函数的函数名")])])]),t._v(" "),s("li",[t._v("数组的拓展\n"),s("ul",[s("li",[t._v("Array.from转换伪数组或 Set 和 Map 数据结构为真数组")]),t._v(" "),s("li",[t._v("Array.of方法用于将一组值，转换为数组")]),t._v(" "),s("li",[t._v("copyWithin() 将指定位置的成员复制到其他位置")]),t._v(" "),s("li",[t._v("find()与findIndex()，find返回符合条件的成员，findIndex返回符合条件的索引值")]),t._v(" "),s("li",[t._v("fill()方法使用给定值，填充一个数组")]),t._v(" "),s("li",[t._v("数组实例的 entries()，keys() 和 values()")]),t._v(" "),s("li",[t._v("数组实例的 includes()")]),t._v(" "),s("li",[t._v("数组实例的 flat() 将二维数组转换成一维数组，返回一个新数组")])])]),t._v(" "),s("li",[t._v("对象的拓展\n"),s("ul",[s("li",[t._v("Object.keys()，Object.values()，Object.entries()")]),t._v(" "),s("li",[t._v("Object.is()比较两个值是否相等，与===基本一致")]),t._v(" "),s("li",[t._v("Object.assign方法用于对象的合并，只是一级属性复制，比浅拷贝多深拷贝了一层而已")])])])]),t._v(" "),s("h4",{attrs:{id:"reduce的常见用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reduce的常见用法","aria-hidden":"true"}},[t._v("#")]),t._v(" reduce的常见用法")]),t._v(" "),s("ul",[s("li",[t._v("数组求和")]),t._v(" "),s("li",[t._v("数组求最大值")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组求和")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组最大值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("342")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" max "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("pre"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" pre"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("cur"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("pre"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将二维数组转为一维数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h4",{attrs:{id:"map和set数据结构有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map和set数据结构有什么区别","aria-hidden":"true"}},[t._v("#")]),t._v(" Map和Set数据结构有什么区别")]),t._v(" "),s("ul",[s("li",[t._v("Set是没有重复元素的集合")]),t._v(" "),s("li",[t._v("Map是键值对的形式")])]),t._v(" "),s("h4",{attrs:{id:"箭头函数和普通函数有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数和普通函数有什么区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 箭头函数和普通函数有什么区别")]),t._v(" "),s("ul",[s("li",[t._v("箭头函数的this指向当前的执行环境，而普通函数指向自己")]),t._v(" "),s("li",[t._v("箭头函数不可以当作构造函数，不能使用new命令")]),t._v(" "),s("li",[t._v("箭头函数可以使用rest获取参数对象，普通函数可以用arguments获取参数对象")]),t._v(" "),s("li",[t._v("箭头函数没有prototype(原型)，所以箭头函数本身没有this")]),t._v(" "),s("li",[t._v("不能直接修改箭头函数的this指向")])]),t._v(" "),s("h4",{attrs:{id:"命令式编程与声明式编程有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令式编程与声明式编程有什么区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 命令式编程与声明式编程有什么区别")]),t._v(" "),s("ul",[s("li",[t._v("命令式编程：详细的告诉计算怎么一步一步的达到结果")]),t._v(" "),s("li",[t._v("声明式编程：只告诉计算机需要做什么，计算机自己执行达到结果")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命令式编程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Ben"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明式编程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Ben"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h4",{attrs:{id:"为什么-0为true"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么-0为true","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么{} + [] === 0为true")]),t._v(" "),s("p",[t._v("{} 认定是语法块，这个放在前面，只有混淆作用，并不参与运算。"),s("br"),t._v("\n+[] 类型转换 0 ，0===0")]),t._v(" "),s("h4",{attrs:{id:"什么是变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是变量提升","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是变量提升")]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"https://segmentfault.com/a/1190000014401234",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 js 变量提升"),s("OutboundLink")],1),s("br"),t._v("\nJavaScript引擎的工作方式是，先解析代码，获取所有被声明的变量，然后再一行一行地运行。这造成的结果，就是所有的变量的声明语句，都会被提升到代码的头部，这就叫做变量提升（hoisting）")]),t._v(" "),s("h2",{attrs:{id:"_2019-9-11"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2019-9-11","aria-hidden":"true"}},[t._v("#")]),t._v(" 2019-9-11")]),t._v(" "),s("h4",{attrs:{id:"socket怎么检测客户端长时间没有连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#socket怎么检测客户端长时间没有连接","aria-hidden":"true"}},[t._v("#")]),t._v(" socket怎么检测客户端长时间没有连接")]),t._v(" "),s("p",[t._v("这里面会有一个心跳机制，服务端定时向客户端发送一个数据包，然后启动一个低级别的线程，该线程中不断检测客户端的回应， 如果在一定时间内没有收到客户端的回应，即认为客户端已经掉线，同样，如果客户端在一定时间内没 有收到服务器的心跳包，则认为连接不可用。")]),t._v(" "),s("h4",{attrs:{id:"路由的hash模式和history模式有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由的hash模式和history模式有什么区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 路由的hash模式和history模式有什么区别")]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"https://juejin.im/post/5a61908c6fb9a01c9064f20a",target:"_blank",rel:"noopener noreferrer"}},[t._v("hash 和 history的区别"),s("OutboundLink")],1)]),t._v(" "),s("ol",[s("li",[t._v("原理不一样\n"),s("ul",[s("li",[t._v("hash模式是通过在 window 对象 onhashchange 事件监听的地址栏的hash部分实现路由跳转")]),t._v(" "),s("li",[t._v("history模式则是通过在window对象上监听popState()事件，history api 提供 pushState、replaceState、go、back、forward，等方法实现路由跳转")])])]),t._v(" "),s("li",[t._v("路由跳转表现不一样")])]),t._v(" "),s("ul",[s("li",[t._v("pushState() 设置的新 URL 可以是与当前 URL 同源的任意 URL；而 hash 只可修改 # 后面的部分，因此只能设置与当前 URL 同文档的 URL")]),t._v(" "),s("li",[t._v("pushState() 设置的新 URL 可以与当前 URL 一模一样，这样也会把记录添加到栈中；而 hash 设置的新值必须与原来不一样才会触发动作将记录添加到栈中")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("发送 http 请求的时表现不一样\n"),s("ul",[s("li",[t._v("hash对地址栏的变化不会发送到后端，准确说只会发送#前半部分到后端，例如：https://yixiu.com")]),t._v(" "),s("li",[t._v("history则会将地址发送到后端，一旦后端没有对应的路由处理，会返回404错误，所以需要后台配置：如果 URL 匹配不到任何静态资源，则应该返回同一个 index.html 页面，这个页面就是你 app 依赖的页面")])])])]),t._v(" "),s("h4",{attrs:{id:"谈谈高阶组件在实际项目的运用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈高阶组件在实际项目的运用","aria-hidden":"true"}},[t._v("#")]),t._v(" 谈谈高阶组件在实际项目的运用")]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"https://juejin.im/entry/5aacbe9351882521d65756d4",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何理解 React 高阶组件(HOC)?"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("高阶组件就是接受组件为参数返回一个加强组件的函数")]),t._v(" "),s("li",[t._v("withRouter、connect这些都是高阶组件的应用")]),t._v(" "),s("li",[t._v("用高阶组件做增加loading效果")]),t._v(" "),s("li",[t._v("复用组件逻辑")])]),t._v(" "),s("h4",{attrs:{id:"深拷贝和浅拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝和浅拷贝","aria-hidden":"true"}},[t._v("#")]),t._v(" 深拷贝和浅拷贝")]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"https://juejin.im/post/5b5dcf8351882519790c9a2e",target:"_blank",rel:"noopener noreferrer"}},[t._v("浅拷贝与深拷贝"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("浅拷贝只复制指向某个对象的指针，而不复制对象本身，新旧对象还是共享同一块内存")]),t._v(" "),s("li",[t._v("深拷贝会另外创造一个一模一样的对象，新对象跟原对象不共享内存，修改新对象不会改变原对象")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("/")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("和原数据是否指向同一对象")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("第一层数据为基本数据类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("原数据包含子对象")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("赋值")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("改变会使原数据一同改变")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("改变会使原数据一同改变")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("浅拷贝")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("改变不会使原数据一同改变")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("改变会使原数据一同改变")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("深拷贝")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("改变不会使原数据一同改变")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("改变不会使原数据一同改变")])])])]),t._v(" "),s("p",[t._v("浅拷贝的实现方式")]),t._v(" "),s("ul",[s("li",[t._v("使用"),s("code",[t._v("Object.assign()")])]),t._v(" "),s("li",[t._v("使用es6的扩展运算符"),s("code",[t._v("...")])]),t._v(" "),s("li",[t._v("Array.prototype.concat()")]),t._v(" "),s("li",[t._v("Array.prototype.slice()")])]),t._v(" "),s("p",[t._v("深拷贝的实现方式")]),t._v(" "),s("ul",[s("li",[t._v("JSON.parse(JSON.stringify())，这种方法虽然可以实现数组或对象深拷贝,但不能处理函数")]),t._v(" "),s("li",[t._v("手写递归方法")]),t._v(" "),s("li",[t._v("函数库lodash提供_.cloneDeep用来做 Deep Copy")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义检测数据类型的功能函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkedType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实现深度克隆---对象/数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断拷贝的数据类型")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化变量result 成为最终克隆的数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" targetType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkedType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("targetType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Object'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("targetType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Array'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" target\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历目标数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取遍历数据结构的每一项值。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断目标结构里的每一值是否存在对象/数组")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkedType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Object'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkedType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Array'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对象/数组里嵌套了对象/数组")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//继续遍历获取到value值")]),t._v("\n      result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取到value值是基本的数据类型或者是函数。")]),t._v("\n      result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br")])]),s("h4",{attrs:{id:"为什么react和vue里面循环产生html时要绑定key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么react和vue里面循环产生html时要绑定key","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么react和vue里面循环产生html时要绑定key")]),t._v(" "),s("p",[t._v("key的作用是为了在diff算法执行时更快的找到对应的节点，提高diff速度")]),t._v(" "),s("h4",{attrs:{id:"怎么控制video视频的宽高"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么控制video视频的宽高","aria-hidden":"true"}},[t._v("#")]),t._v(" 怎么控制video视频的宽高")]),t._v(" "),s("p",[t._v("设置width和height")]),t._v(" "),s("h4",{attrs:{id:"为什么要发送一个option请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要发送一个option请求","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么要发送一个option请求")]),t._v(" "),s("p",[t._v("浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的XMLHttpRequest请求，否则就报错")]),t._v(" "),s("p",[t._v("这和浏览器的 CORS 跨域机制有关，客户端将请求分为了两种：简单请求和非简单请求；当请求为非简单请求时，就会触发浏览器发送预检请求。")]),t._v(" "),s("p",[t._v("预检请求一般包括\nrequest header")]),t._v(" "),s("h4",{attrs:{id:"在项目中做过哪些优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在项目中做过哪些优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 在项目中做过哪些优化")]),t._v(" "),s("h4",{attrs:{id:"前端部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端部署","aria-hidden":"true"}},[t._v("#")]),t._v(" 前端部署")]),t._v(" "),s("h2",{attrs:{id:"_2019-9-12"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2019-9-12","aria-hidden":"true"}},[t._v("#")]),t._v(" 2019-9-12")]),t._v(" "),s("h4",{attrs:{id:"为何要在componentdidmount里面发送请求？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为何要在componentdidmount里面发送请求？","aria-hidden":"true"}},[t._v("#")]),t._v(" 为何要在componentDidMount里面发送请求？")]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"https://juejin.im/post/5c70e67f6fb9a049ba42326b",target:"_blank",rel:"noopener noreferrer"}},[t._v("为何要在componentDidMount里面发送请求？"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("componentDidmount 是在组件完全挂载后才会执行，在此方法中调用setState 会触发重新渲染，最重要的是，这是官方推荐的！")]),t._v(" "),s("li",[t._v("componentWillMount、constructor 里进行网络请求会阻碍组件的渲染，会阻碍组件的实例化")]),t._v(" "),s("li",[t._v("从React 16.3（2018年3月）开始componentWillMount会被弃用")])]),t._v(" "),s("h4",{attrs:{id:"你用过哪些react相关的ui框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你用过哪些react相关的ui框架","aria-hidden":"true"}},[t._v("#")]),t._v(" 你用过哪些react相关的UI框架")]),t._v(" "),s("ul",[s("li",[t._v("Zent有赞")]),t._v(" "),s("li",[t._v("ant-design和ant-mobile")]),t._v(" "),s("li",[t._v("element-react")]),t._v(" "),s("li",[t._v("React Suite")])]),t._v(" "),s("h4",{attrs:{id:"怎么用css写出三角形"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么用css写出三角形","aria-hidden":"true"}},[t._v("#")]),t._v(" 怎么用css写出三角形")]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".trangle")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 40px solid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transparent transparent transparent red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h4",{attrs:{id:"react和vue有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react和vue有什么区别","aria-hidden":"true"}},[t._v("#")]),t._v(" react和vue有什么区别")]),t._v(" "),s("blockquote",[s("p",[t._v("区别：https://juejin.im/post/5b8b56e3f265da434c1f5f76\n数据流动原理：https://recallhyx.github.io/2018/03/18/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%A4%A7%E6%A1%86%E6%9E%B6%E6%95%B0%E6%8D%AE%E6%B5%81%E5%8A%A8%E5%92%8C%E5%8E%9F%E7%90%86/")])]),t._v(" "),s("ul",[s("li",[t._v("数据流向不一样：vue支持双向数据绑定，react是单向数据流")]),t._v(" "),s("li",[t._v("监听数据变化的原理不一样：vue使用Object.defineProperty()实现数据劫持，组件能自动响应数据变化，react通过onChange/setState的方式")]),t._v(" "),s("li")]),t._v(" "),s("h4",{attrs:{id:"mvvm的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvvm的原理","aria-hidden":"true"}},[t._v("#")]),t._v(" MVVM的原理")]),t._v(" "),s("p",[t._v("参考：\n"),s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/02/mvcmvp_mvvm.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MVC，MVP 和 MVVM 的图示"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://juejin.im/post/5c3454dc6fb9a049e93ce7b4",target:"_blank",rel:"noopener noreferrer"}},[t._v("浅析 web 前端 MVVM"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("View：视图")]),t._v(" "),s("li",[t._v("ViewModel：视图模型")]),t._v(" "),s("li",[t._v("Model：数据模型")])]),t._v(" "),s("p",[t._v("它采用双向绑定（data-binding）：View的变动，自动反映在 ViewModel，反之亦然")]),t._v(" "),s("p",[s("strong",[t._v("Vue 的 MVVM")]),s("br"),t._v("\nView：单文件里 "),s("code",[t._v("<template>")]),t._v(" 标签的内容，展现给用户的内容，与 ViewModel 双向绑定，可以在其中插入 ViewModel 提供的数据。"),s("br"),t._v("\nViewModel：Vue 实例整个都是 ViewModel，与 View 双向绑定，用户在 View 修改数据或发出 ajax 等指令时， ViewModel 会及时相应，接着向下修改 Model——至此可以看出 Model 和 View 是没有直接关系的。"),s("br"),t._v("\nModel：这一层或者有歧义。为了更好理解 Model 需要引入 Vuex，在有 Vuex 的情况下，Vuex 提供的数据就是 Model，这符合后端架构中 Model 包含业务逻辑的情况。但是在无 Vuex 的情况下，Model 应该就是 Vue 实例的 data 属性，也就是 JavaScript 数据对象本身。")]),t._v(" "),s("h4",{attrs:{id:"实现垂直居中的方式有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现垂直居中的方式有哪些","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现垂直居中的方式有哪些")]),t._v(" "),s("h4",{attrs:{id:"在项目中怎么做移动端适配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在项目中怎么做移动端适配","aria-hidden":"true"}},[t._v("#")]),t._v(" 在项目中怎么做移动端适配")]),t._v(" "),s("h4",{attrs:{id:"react组件通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react组件通信","aria-hidden":"true"}},[t._v("#")]),t._v(" react组件通信")]),t._v(" "),s("h4",{attrs:{id:"react导入组件的方式有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react导入组件的方式有哪些","aria-hidden":"true"}},[t._v("#")]),t._v(" react导入组件的方式有哪些")]),t._v(" "),s("ul",[s("li",[t._v("通过传统import方式导入")]),t._v(" "),s("li",[t._v("通过require引入")])]),t._v(" "),s("h4",{attrs:{id:"http请求头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http请求头","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP请求头")]),t._v(" "),s("ul",[s("li",[t._v("General 一般头\n"),s("ul",[s("li",[t._v("Request URL 请求地址")]),t._v(" "),s("li",[t._v("Request Method 请求方式")]),t._v(" "),s("li",[t._v("Status Code 请求状态")]),t._v(" "),s("li",[t._v("Remote Address 远端地址")])])]),t._v(" "),s("li",[t._v("Request Header 请求头\n"),s("ul",[s("li",[t._v("Accept \t用户代理期望的 MIME（媒体类型） 类型列表")]),t._v(" "),s("li",[t._v("Origin 远端信息")]),t._v(" "),s("li",[t._v("User-Agent 用户代理信息")]),t._v(" "),s("li",[t._v("Content-Type 示服务器文档的MIME 类型")]),t._v(" "),s("li",[t._v("Host 域名")]),t._v(" "),s("li",[t._v("Authorization 用户凭证")])])]),t._v(" "),s("li",[t._v("Response Header 响应头\n"),s("ul",[s("li",[t._v("Access-Control-Allow-Headers 允许请求头")]),t._v(" "),s("li",[t._v("Access-Control-Allow-Methods 允许的请求方式")]),t._v(" "),s("li",[t._v("Access-Control-Allow-Origin 是否允许跨域")]),t._v(" "),s("li",[t._v("Content-Type 示服务器文档的MIME 类型")]),t._v(" "),s("li",[t._v("Cache-Control 是否开启缓存")]),t._v(" "),s("li",[t._v("Expires 过期时间")]),t._v(" "),s("li",[t._v("Date 时间")])])])]),t._v(" "),s("h4",{attrs:{id:"按需引入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按需引入","aria-hidden":"true"}},[t._v("#")]),t._v(" 按需引入")]),t._v(" "),s("p",[t._v("参考：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/code-splitting.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码分割"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000017332094",target:"_blank",rel:"noopener noreferrer"}},[t._v("React 按需加载 - 代码分隔"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("const OtherComponent = React.lazy(() => import('./OtherComponent'));")]),t._v(" "),s("h4",{attrs:{id:"对于redux的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对于redux的理解","aria-hidden":"true"}},[t._v("#")]),t._v(" 对于redux的理解")]),t._v(" "),s("p",[t._v("用来做全局状态管理，组件可以共享到状态")]),t._v(" "),s("ul",[s("li",[t._v("state：是一个js对象，存放应用状态")]),t._v(" "),s("li",[t._v("action：是一个包含"),s("code",[t._v("type")]),t._v("和"),s("code",[t._v("payload")]),t._v("的普通obj，我们通常使用一个函数（action creator）返回action")]),t._v(" "),s("li",[t._v("reducer：是一个纯函数，描述state是如何改变的，它有两个参数state和action，我们在函数体内使用switch语句匹配到action的type，拿到payload然后对状态作出更改")])]),t._v(" "),s("p",[s("strong",[t._v("数据流向")]),s("br"),t._v("\n数据流向是这样的，组件dispath一个action，reducer匹配到actions的type对state作出修改，view接收到数据变化，视图响应变化。视图是怎么接收到变化到呢，当我们没有使用react-redux时，我们是通过"),s("code",[t._v("store.subscrib()")]),t._v("订阅了state到变化，从而响应到视图上，而在使用"),s("code",[t._v("react-redux")]),t._v("时，我们借助connect方法，它自动订阅了state到变化，并映射到视图上，组件可以使用connect到前提是，我们必须在根组件外层包裹"),s("code",[t._v("Provider")]),t._v("组件。")]),t._v(" "),s("p",[s("strong",[t._v("异步操作")]),s("br"),t._v("\n异步操作需要借助"),s("code",[t._v("redux-thunk")]),t._v("这个中间件，它可以使我们可以在action中拿到dispatch对象，我们使用action creator函数返回一个promise对象，在then函数内再dispath一个action通知reducer对state做出改变，也就是说异步操作发起了2次dispatch。")]),t._v(" "),s("h4",{attrs:{id:"同事对你的评价"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同事对你的评价","aria-hidden":"true"}},[t._v("#")]),t._v(" 同事对你的评价")]),t._v(" "),s("p",[t._v("热情、乐于助人、自律、做事认真、有潜力")]),t._v(" "),s("h4",{attrs:{id:"什么是http协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是http协议","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是http协议")]),t._v(" "),s("h4",{attrs:{id:"css选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css选择器","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS选择器")])])},[],!1,null,null,null);a.default=n.exports}}]);